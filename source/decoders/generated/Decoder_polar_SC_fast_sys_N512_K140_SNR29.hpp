#ifndef DECODER_POLAR_SC_FAST_SYS_N512_K140_SNR29_HPP_
#define DECODER_POLAR_SC_FAST_SYS_N512_K140_SNR29_HPP_

#include <vector>
#include <cassert>

#include "../Decoder_polar_SC_fast_sys.hpp"

namespace aff3ct
{
namespace module
{
static const std::vector<bool> Decoder_polar_SC_fast_sys_fb_512_140_29 = {
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};

class Decoder_polar_SC_fast_sys_N512_K140_SNR29 : public Decoder_polar_SC_fast_sys
{
public:
	Decoder_polar_SC_fast_sys_N512_K140_SNR29(const int& K, const int& N, const int n_frames = 1)
	: Decoder_polar_SC_fast_sys(K, N, Decoder_polar_SC_fast_sys_fb_512_140_29)
	{
		const std::string name = "Decoder_polar_SC_fast_sys_N512_K140_SNR29";
		this->set_name(name);
		assert(N == 512);
		assert(K == 140);
	}

	virtual ~Decoder_polar_SC_fast_sys_N512_K140_SNR29()
	{
	}

	void _decode()
	{

		auto &l = this->l;
		auto &s = this->s;

		f  <256>(   l,    0+   0,    0+ 256,               0+ 512, 256);
		f  <128>(   l,  512+   0,  512+ 128,             512+ 256, 128);
		rep<128>(s, l,  768+   0,                          0+   0, 128);
		gr <128>(s, l,  512+   0,  512+ 128,    0+   0,  512+ 256, 128);
		f  < 64>(   l,  768+   0,  768+  64,             768+ 128,  64);
		rep< 64>(s, l,  896+   0,                        128+   0,  64);
		gr < 64>(s, l,  768+   0,  768+  64,  128+   0,  768+ 128,  64);
		f  < 32>(   l,  896+   0,  896+  32,             896+  64,  32);
		g0 < 16>(   l,  960+   0,  960+  16,             960+  32,  16);
		g0 <  8>(   l,  992+   0,  992+   8,             992+  16,   8);
		g0 <  4>(   l, 1008+   0, 1008+   4,            1008+   8,   4);
		spc<  4>(s, l, 1016+   0,                        220+   0,   4);
		xo0<  4>(s,     216+   4,                        216+   0,   4);
		xo0<  8>(s,     208+   8,                        208+   0,   8);
		xo0< 16>(s,     192+  16,                        192+   0,  16);
		g  < 32>(s, l,  896+   0,  896+  32,  192+   0,  896+  64,  32);
		f  < 16>(   l,  960+   0,  960+  16,             960+  32,  16);
		f  <  8>(   l,  992+   0,  992+   8,             992+  16,   8);
		rep<  8>(s, l, 1008+   0,                        224+   0,   8);
		gr <  8>(s, l,  992+   0,  992+   8,  224+   0,  992+  16,   8);
		f  <  4>(   l, 1008+   0, 1008+   4,            1008+   8,   4);
		rep<  4>(s, l, 1016+   0,                        232+   0,   4);
		gr <  4>(s, l, 1008+   0, 1008+   4,  232+   0, 1008+   8,   4);
		spc<  4>(s, l, 1016+   0,                        236+   0,   4);
		xo <  4>(s,     232+   0,  232+   4,             232+   0,   4);
		xo <  8>(s,     224+   0,  224+   8,             224+   0,   8);
		g  < 16>(s, l,  960+   0,  960+  16,  224+   0,  960+  32,  16);
		f  <  8>(   l,  992+   0,  992+   8,             992+  16,   8);
		f  <  4>(   l, 1008+   0, 1008+   4,            1008+   8,   4);
		rep<  4>(s, l, 1016+   0,                        240+   0,   4);
		gr <  4>(s, l, 1008+   0, 1008+   4,  240+   0, 1008+   8,   4);
		spc<  4>(s, l, 1016+   0,                        244+   0,   4);
		xo <  4>(s,     240+   0,  240+   4,             240+   0,   4);
		g  <  8>(s, l,  992+   0,  992+   8,  240+   0,  992+  16,   8);
		spc<  8>(s, l, 1008+   0,                        248+   0,   8);
		xo <  8>(s,     240+   0,  240+   8,             240+   0,   8);
		xo < 16>(s,     224+   0,  224+  16,             224+   0,  16);
		xo < 32>(s,     192+   0,  192+  32,             192+   0,  32);
		xo < 64>(s,     128+   0,  128+  64,             128+   0,  64);
		xo <128>(s,       0+   0,    0+ 128,               0+   0, 128);
		g  <256>(s, l,    0+   0,    0+ 256,    0+   0,    0+ 512, 256);
		f  <128>(   l,  512+   0,  512+ 128,             512+ 256, 128);
		f  < 64>(   l,  768+   0,  768+  64,             768+ 128,  64);
		g0 < 32>(   l,  896+   0,  896+  32,             896+  64,  32);
		g0 < 16>(   l,  960+   0,  960+  16,             960+  32,  16);
		g0 <  8>(   l,  992+   0,  992+   8,             992+  16,   8);
		f  <  4>(   l, 1008+   0, 1008+   4,            1008+   8,   4);
		rep<  4>(s, l, 1016+   0,                        312+   0,   4);
		gr <  4>(s, l, 1008+   0, 1008+   4,  312+   0, 1008+   8,   4);
		spc<  4>(s, l, 1016+   0,                        316+   0,   4);
		xo <  4>(s,     312+   0,  312+   4,             312+   0,   4);
		xo0<  8>(s,     304+   8,                        304+   0,   8);
		xo0< 16>(s,     288+  16,                        288+   0,  16);
		xo0< 32>(s,     256+  32,                        256+   0,  32);
		g  < 64>(s, l,  768+   0,  768+  64,  256+   0,  768+ 128,  64);
		f  < 32>(   l,  896+   0,  896+  32,             896+  64,  32);
		f  < 16>(   l,  960+   0,  960+  16,             960+  32,  16);
		rep< 16>(s, l,  992+   0,                        320+   0,  16);
		gr < 16>(s, l,  960+   0,  960+  16,  320+   0,  960+  32,  16);
		f  <  8>(   l,  992+   0,  992+   8,             992+  16,   8);
		rep<  8>(s, l, 1008+   0,                        336+   0,   8);
		gr <  8>(s, l,  992+   0,  992+   8,  336+   0,  992+  16,   8);
		f  <  4>(   l, 1008+   0, 1008+   4,            1008+   8,   4);
		rep<  4>(s, l, 1016+   0,                        344+   0,   4);
		gr <  4>(s, l, 1008+   0, 1008+   4,  344+   0, 1008+   8,   4);
		spc<  4>(s, l, 1016+   0,                        348+   0,   4);
		xo <  4>(s,     344+   0,  344+   4,             344+   0,   4);
		xo <  8>(s,     336+   0,  336+   8,             336+   0,   8);
		xo < 16>(s,     320+   0,  320+  16,             320+   0,  16);
		g  < 32>(s, l,  896+   0,  896+  32,  320+   0,  896+  64,  32);
		f  < 16>(   l,  960+   0,  960+  16,             960+  32,  16);
		f  <  8>(   l,  992+   0,  992+   8,             992+  16,   8);
		rep<  8>(s, l, 1008+   0,                        352+   0,   8);
		gr <  8>(s, l,  992+   0,  992+   8,  352+   0,  992+  16,   8);
		f  <  4>(   l, 1008+   0, 1008+   4,            1008+   8,   4);
		rep<  4>(s, l, 1016+   0,                        360+   0,   4);
		gr <  4>(s, l, 1008+   0, 1008+   4,  360+   0, 1008+   8,   4);
		spc<  4>(s, l, 1016+   0,                        364+   0,   4);
		xo <  4>(s,     360+   0,  360+   4,             360+   0,   4);
		xo <  8>(s,     352+   0,  352+   8,             352+   0,   8);
		g  < 16>(s, l,  960+   0,  960+  16,  352+   0,  960+  32,  16);
		f  <  8>(   l,  992+   0,  992+   8,             992+  16,   8);
		f  <  4>(   l, 1008+   0, 1008+   4,            1008+   8,   4);
		g0 <  2>(   l, 1016+   0, 1016+   2,            1016+   4,   2);
		h  <  2>(s, l, 1020+   0,                        370+   0,   2);
		xo0<  2>(s,     368+   2,                        368+   0,   2);
		g  <  4>(s, l, 1008+   0, 1008+   4,  368+   0, 1008+   8,   4);
		h  <  4>(s, l, 1016+   0,                        372+   0,   4);
		xo <  4>(s,     368+   0,  368+   4,             368+   0,   4);
		g  <  8>(s, l,  992+   0,  992+   8,  368+   0,  992+  16,   8);
		h  <  8>(s, l, 1008+   0,                        376+   0,   8);
		xo <  8>(s,     368+   0,  368+   8,             368+   0,   8);
		xo < 16>(s,     352+   0,  352+  16,             352+   0,  16);
		xo < 32>(s,     320+   0,  320+  32,             320+   0,  32);
		xo < 64>(s,     256+   0,  256+  64,             256+   0,  64);
		g  <128>(s, l,  512+   0,  512+ 128,  256+   0,  512+ 256, 128);
		f  < 64>(   l,  768+   0,  768+  64,             768+ 128,  64);
		f  < 32>(   l,  896+   0,  896+  32,             896+  64,  32);
		f  < 16>(   l,  960+   0,  960+  16,             960+  32,  16);
		rep< 16>(s, l,  992+   0,                        384+   0,  16);
		gr < 16>(s, l,  960+   0,  960+  16,  384+   0,  960+  32,  16);
		f  <  8>(   l,  992+   0,  992+   8,             992+  16,   8);
		rep<  8>(s, l, 1008+   0,                        400+   0,   8);
		gr <  8>(s, l,  992+   0,  992+   8,  400+   0,  992+  16,   8);
		f  <  4>(   l, 1008+   0, 1008+   4,            1008+   8,   4);
		g0 <  2>(   l, 1016+   0, 1016+   2,            1016+   4,   2);
		h  <  2>(s, l, 1020+   0,                        410+   0,   2);
		xo0<  2>(s,     408+   2,                        408+   0,   2);
		g  <  4>(s, l, 1008+   0, 1008+   4,  408+   0, 1008+   8,   4);
		h  <  4>(s, l, 1016+   0,                        412+   0,   4);
		xo <  4>(s,     408+   0,  408+   4,             408+   0,   4);
		xo <  8>(s,     400+   0,  400+   8,             400+   0,   8);
		xo < 16>(s,     384+   0,  384+  16,             384+   0,  16);
		g  < 32>(s, l,  896+   0,  896+  32,  384+   0,  896+  64,  32);
		f  < 16>(   l,  960+   0,  960+  16,             960+  32,  16);
		f  <  8>(   l,  992+   0,  992+   8,             992+  16,   8);
		g0 <  4>(   l, 1008+   0, 1008+   4,            1008+   8,   4);
		spc<  4>(s, l, 1016+   0,                        420+   0,   4);
		xo0<  4>(s,     416+   4,                        416+   0,   4);
		g  <  8>(s, l,  992+   0,  992+   8,  416+   0,  992+  16,   8);
		spc<  8>(s, l, 1008+   0,                        424+   0,   8);
		xo <  8>(s,     416+   0,  416+   8,             416+   0,   8);
		g  < 16>(s, l,  960+   0,  960+  16,  416+   0,  960+  32,  16);
		spc< 16>(s, l,  992+   0,                        432+   0,  16);
		xo < 16>(s,     416+   0,  416+  16,             416+   0,  16);
		xo < 32>(s,     384+   0,  384+  32,             384+   0,  32);
		g  < 64>(s, l,  768+   0,  768+  64,  384+   0,  768+ 128,  64);
		f  < 32>(   l,  896+   0,  896+  32,             896+  64,  32);
		f  < 16>(   l,  960+   0,  960+  16,             960+  32,  16);
		f  <  8>(   l,  992+   0,  992+   8,             992+  16,   8);
		f  <  4>(   l, 1008+   0, 1008+   4,            1008+   8,   4);
		rep<  4>(s, l, 1016+   0,                        448+   0,   4);
		gr <  4>(s, l, 1008+   0, 1008+   4,  448+   0, 1008+   8,   4);
		spc<  4>(s, l, 1016+   0,                        452+   0,   4);
		xo <  4>(s,     448+   0,  448+   4,             448+   0,   4);
		g  <  8>(s, l,  992+   0,  992+   8,  448+   0,  992+  16,   8);
		spc<  8>(s, l, 1008+   0,                        456+   0,   8);
		xo <  8>(s,     448+   0,  448+   8,             448+   0,   8);
		g  < 16>(s, l,  960+   0,  960+  16,  448+   0,  960+  32,  16);
		spc< 16>(s, l,  992+   0,                        464+   0,  16);
		xo < 16>(s,     448+   0,  448+  16,             448+   0,  16);
		g  < 32>(s, l,  896+   0,  896+  32,  448+   0,  896+  64,  32);
		spc< 32>(s, l,  960+   0,                        480+   0,  32);
		xo < 32>(s,     448+   0,  448+  32,             448+   0,  32);
		xo < 64>(s,     384+   0,  384+  64,             384+   0,  64);
		xo <128>(s,     256+   0,  256+ 128,             256+   0, 128);
		xo <256>(s,       0+   0,    0+ 256,               0+   0, 256);
	}
};
}
}
#endif
